# This is the RELEASE pipeline in the CI/CD process

options:
  logging: CLOUD_LOGGING_ONLY
  substitutionOption: 'ALLOW_LOOSE'

substitutions:
  _ENV: 'test'                # Can be overridden in Cloud Build UI
  _IMAGE_TAG: 'latest'        # Can be overridden in Cloud Build UI
  _IP_ADDRESS: 'rats-backend-test-ip'   # Reserved static IP
  _INGRESS_PATH: '/opsscheduler'       # Path your service exposes

steps:
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'helm-deploy'
    entrypoint: bash
    args:
      - -c
      - |
        apt-get update && apt-get install -y kubectl jq
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

        case "${_ENV}" in
          prod)
            cluster="rcal-prod-cluster"
            namespace="rcal-prod"
            ;;
          test)
            cluster="rcal-test-cluster"
            namespace="rcal-test"
            ;;
          *)
            echo "Unknown environment: ${_ENV}"
            exit 1
            ;;
        esac

        # Authenticate with the cluster
        gcloud container clusters get-credentials "$cluster" --region us-south1 --project "$PROJECT_ID"

        # Deploy the service (Deployment + Service only)
        helm upgrade --install rcal-ops-scheduler-${_ENV} ./helm \
          -f ./helm/env-overrides/values.${_ENV}.yaml \
          --set image.repository=us-south1-docker.pkg.dev/$PROJECT_ID/rcal-ops-scheduler/rcal-ops-scheduler \
          --set image.tag=${_IMAGE_TAG} \
          --set image.pullPolicy=Always \
          --set redeployTimestamp="$(date +%s)" \
          --namespace "$namespace" \
          --create-namespace \
          --wait --timeout 15m

        # Find index of existing path (if any)
        INDEX=$(kubectl get ingress central-ingress -n "$namespace" -o json \
          | jq -r --arg path "${_INGRESS_PATH}" \
            '.spec.rules[0].http.paths | to_entries[] | select(.value.path == $path) | .key' || true)

        if [ -n "$INDEX" ]; then
          echo "Removing existing path ${_INGRESS_PATH} at index $INDEX"
          kubectl patch ingress central-ingress -n "$namespace" --type='json' \
            -p="[{\"op\": \"remove\", \"path\": \"/spec/rules/0/http/paths/$INDEX\"}]"
        fi

        # Build the JSON patch for adding the new path
        PATCH=$(cat <<EOF
        {
          "op": "add",
          "path": "/spec/rules/0/http/paths/-",
          "value": {
            "path": "${_INGRESS_PATH}",
            "pathType": "Prefix",
            "backend": {
              "service": {
                "name": "rcal-ops-scheduler-${_ENV}-service",
                "port": { "number": 80 }
              }
            }
          }
        }
  EOF
  )
  
  # Add the new path
  echo "Adding path ${_INGRESS_PATH} to central-ingress"
  echo "$PATCH" | kubectl patch ingress central-ingress -n "$namespace" --type='json' -p="[$PATCH]"
